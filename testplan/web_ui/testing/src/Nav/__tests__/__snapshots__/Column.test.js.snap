// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Column shallow renders the correct HTML structure 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Column>
    <p
        className="unique"
    />
</Column>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <div
          className="column_1heobik"
          style={
                    Object {
                              "width": "18em",
                            }
          }
>
          <p
                    className="unique"
          />
</div>,
        <div
          className="grip_gfj8zc"
          style={
                    Object {
                              "left": "18em",
                            }
          }
/>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <p
            className="unique"
/>,
          "className": "column_1heobik",
          "style": Object {
            "width": "18em",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "unique",
          },
          "ref": null,
          "rendered": null,
          "type": "p",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "grip_gfj8zc",
          "style": Object {
            "left": "18em",
          },
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <div
            className="column_1heobik"
            style={
                        Object {
                                    "width": "18em",
                                  }
            }
>
            <p
                        className="unique"
            />
</div>,
          <div
            className="grip_gfj8zc"
            style={
                        Object {
                                    "left": "18em",
                                  }
            }
/>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <p
              className="unique"
/>,
            "className": "column_1heobik",
            "style": Object {
              "width": "18em",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "unique",
            },
            "ref": null,
            "rendered": null,
            "type": "p",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "grip_gfj8zc",
            "style": Object {
              "left": "18em",
            },
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
