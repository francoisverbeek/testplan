// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NavList shallow renders the correct HTML structure 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NavList
    autoSelect={[Function]}
    breadcrumbLength={1}
    entries={
        Array [
            Object {
              "case_count": Object {
                "failed": 0,
                "passed": 0,
              },
              "name": "test",
              "status": "passed",
              "type": "testplan",
              "uid": "123",
            },
          ]
    }
    handleNavClick={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <ListGroup
        tag="ul"
>
        <ListGroupItem
                className="navButton_140hs3a-o_O-navButtonInteract_raa3h5"
                onClick={[Function]}
                tabIndex="1"
                tag="li"
        >
                <NavEntry
                        caseCountFailed={0}
                        caseCountPassed={0}
                        name="test"
                        status="passed"
                        type={undefined}
                />
        </ListGroupItem>
</ListGroup>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ListGroupItem
            className="navButton_140hs3a-o_O-navButtonInteract_raa3h5"
            onClick={[Function]}
            tabIndex="1"
            tag="li"
>
            <NavEntry
                        caseCountFailed={0}
                        caseCountPassed={0}
                        name="test"
                        status="passed"
                        type={undefined}
            />
</ListGroupItem>,
        ],
        "tag": "ul",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "123",
          "nodeType": "function",
          "props": Object {
            "children": <NavEntry
              caseCountFailed={0}
              caseCountPassed={0}
              name="test"
              status="passed"
              type={undefined}
/>,
            "className": "navButton_140hs3a-o_O-navButtonInteract_raa3h5",
            "onClick": [Function],
            "tabIndex": "1",
            "tag": "li",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "caseCountFailed": 0,
              "caseCountPassed": 0,
              "name": "test",
              "status": "passed",
              "type": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <ListGroup
          tag="ul"
>
          <ListGroupItem
                    className="navButton_140hs3a-o_O-navButtonInteract_raa3h5"
                    onClick={[Function]}
                    tabIndex="1"
                    tag="li"
          >
                    <NavEntry
                              caseCountFailed={0}
                              caseCountPassed={0}
                              name="test"
                              status="passed"
                              type={undefined}
                    />
          </ListGroupItem>
</ListGroup>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ListGroupItem
              className="navButton_140hs3a-o_O-navButtonInteract_raa3h5"
              onClick={[Function]}
              tabIndex="1"
              tag="li"
>
              <NavEntry
                            caseCountFailed={0}
                            caseCountPassed={0}
                            name="test"
                            status="passed"
                            type={undefined}
              />
</ListGroupItem>,
          ],
          "tag": "ul",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "123",
            "nodeType": "function",
            "props": Object {
              "children": <NavEntry
                caseCountFailed={0}
                caseCountPassed={0}
                name="test"
                status="passed"
                type={undefined}
/>,
              "className": "navButton_140hs3a-o_O-navButtonInteract_raa3h5",
              "onClick": [Function],
              "tabIndex": "1",
              "tag": "li",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "caseCountFailed": 0,
                "caseCountPassed": 0,
                "name": "test",
                "status": "passed",
                "type": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
